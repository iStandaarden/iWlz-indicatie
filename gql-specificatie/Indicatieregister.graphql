"""
Graphql Schemadefinitie voor het Indicatieregsiter
Versie 1.6.2
datum 2024-09-10
Gebaseerd op Indicatieregister 2
"""
schema {
  query: Query
}

"""
The `UUID` scalar represents an version 4 UUID specification
"""
scalar UUID @specifiedBy(url: "https://tools.ietf.org/html/rfc4122")

"""
The `Date` scalar represents an ISO-8601 compliant date type. YYYY-MM-DD
"""
scalar Date
  @specifiedBy(url: "https://scalars.graphql.org/andimarek/local-date")

"""
The `DateTime` scalar represents an ISO-8601 compliant date time type.
"""
scalar DateTime
  @specifiedBy(url: "https://scalars.graphql.org/andimarek/date-time")

"""
QUERY definities
"""
type Query {
  # Haal Wlzindicatie voor IndicatieId
  getWlzIndicatieVoorIndicatieID(wlzindicatieID: UUID!): WlzIndicatie!
    @deprecated(reason: "Gebruik wlzIndicatie met filter opties")

  wlzIndicatie(where: WlzIndicatieFilterInput): [WlzIndicatie!]!
}

"""
Object types
"""
type WlzIndicatie {
  wlzindicatieID: UUID!
  bsn: String!
  besluitnummer: Int!
  soortWlzindicatie: String! #COD169!
  afgiftedatum: Date!
  ingangsdatum: Date!
  einddatum: Date
  meerzorg: String #COD260
  initieelVerantwoordelijkZorgkantoor: String! 
  vervaldatum: Date
  grondslag: [Grondslag!]
  geindiceerdZorgzwaartepakket: [GeindiceerdZorgzwaartepakket!]
  beperking: [Beperking!]
  stoornis: [Stoornis!]
  stoornisScore: [StoornisScore!]
  wzd: Wzd
  client: Client!
  commentaar: String
}

type GeindiceerdZorgzwaartepakket {
  geindiceerdZorgzwaartepakketID: UUID!
  zzpCode: String! #COD163!
  ingangsdatum: Date!
  einddatum: Date
  voorkeurClient: String #COD999
  instellingVoorkeur: String
  financiering: String! #COD998
  commentaar: String
}

type Grondslag {
  grondslagID: UUID!
  grondslag: String! #COD736
  volgorde: Int!
}

type Beperking {
  beperkingID: UUID!
  categorie: String! #COD539!
  duur: String #COD749
  commentaar: String
  beperkingScores: [BeperkingScore]
    @deprecated(reason: "vervangen beperkingScore")
  beperkingScore: [BeperkingScore!]
}

type BeperkingScore {
  beperkingScoreID: UUID!
  beperkingVraag: String! #COD825!
  beperkingScore: String! #COD828!
  commentaar: String
}

type Stoornis {
  stoornisID: UUID!
  grondslag: String! #COD736!
  diagnoseCodelijst: String! #COD392!
  diagnoseSubCodelijst: String #COD770
  ziektebeeldStoornis: String! #COD923COD924COD925! #vulling uit een van COD923, COD924 en COD925; zie iWlz codelijsten
  prognose: String #COD737
  commentaar: String
}

type StoornisScore {
  stoornisScoreID: UUID!
  stoornisVraag: String! #COD824!
  stoornisScore: String! #COD827!
  commentaar: String
}

type Client {
  clientID: UUID!
  bsn: String!
  geheimeClient: String! #COD260
  geboorteDatum: Date!
  geboortedatumGebruik: String #COD170
  geslacht: String! #COD046!
  burgerlijkeStaat: String #COD366
  geslachtsnaam: String!
  voorvoegselGeslachtsnaam: String
  partnernaam: String
  voorvoegselPartnernaam: String
  voornamen: String
  roepnaam: String
  voorletters: String
  naamGebruik: String! #COD700!
  leefeenheid: String #COD478
  agbcodeHuisarts: String
  communicatieVorm: String #COD747
  taal: String
  commentaar: String
  contactPersoon(
    where: ContactPersoonFilterInput
  ): [ContactPersoon]
  contactGegevens: [ContactGegevens!]!
}

type ContactPersoon {
  contactPersoonID: UUID!
  relatieNummer: String!
  volgorde: Int
  soortRelatie: String! #COD472!
  rol: String #COD1003: Rol
  relatie: String #COD1002: Relatie
  organisatieNaam: String
    @deprecated(
      reason: "RFC24001 Organisatienaam verwijderen uit Indicatieregister"
    )
  voornamen: String
  roepnaam: String
  voorletters: String
  geslachtsnaam: String
  voorvoegselGeslachtsnaam: String
  partnernaam: String
  voorvoegselPartnernaam: String
  naamGebruik: String #COD700
  geslacht: String #COD046
  geboorteDatum: Date
  geboortedatumGebruik: String #COD170
  ingangsdatum: Date!
  einddatum: Date
  clientID: UUID!
  contactGegevens: [ContactGegevens!]!
}

type ContactGegevens {
  contactGegevensID: UUID!
  clientID: UUID
  contactPersoonID: UUID
  adres(where: AdresFilterInput): Adres
  telefoon(where: TelefoonFilterInput): Telefoon
  email(where: EmailFilterInput): Email
}

type Adres {
  adresID: UUID!
  adresSoort: String! #COD757
  straatnaam: String
  huisnummer: Int
  huisletter: String
  huisnummerToevoeging: String
  postcode: String
  plaatsnaam: String
  landCode: String #COD032
  aanduidingWoonadres: String #NUM061
  ingangsdatum: Date
  einddatum: Date
}

type Email {
  emailID: UUID!
  emailadres: String!
  ingangsdatum: Date!
  einddatum: Date
}

type Telefoon {
  telefoonID: UUID!
  telefoonnummer: String!
  landnummer: String
  ingangsdatum: Date!
  einddatum: Date
}

type Wzd {
  wzdID: UUID!
  wzdVerklaring: String! #COD127
  ingangsdatum: Date
  einddatum: Date
}

"""
Specific Input Types
"""
input AdresFilterInput {
  # and: [AdresFilterInput!]
  or: [AdresFilterInput!]
  ingangsdatum: DateOperationFilterInput
  einddatum: DateOperationFilterInput
}

input ContactPersoonFilterInput {
  # and: [ContactPersoonFilterInput!]
  or: [ContactPersoonFilterInput!]
  ingangsdatum: DateOperationFilterInput
  einddatum: DateOperationFilterInput
}


input EmailFilterInput {
  # and: [EmailFilterInput!]
  or: [EmailFilterInput!]
  ingangsdatum: DateOperationFilterInput
  einddatum: DateOperationFilterInput
}

input TelefoonFilterInput {
  # and: [TelefoonFilterInput!]
  or: [TelefoonFilterInput!]
  ingangsdatum: DateOperationFilterInput
  einddatum: DateOperationFilterInput
}

input WlzIndicatieFilterInput {
  wlzindicatieID: UuidOperationFilterInput
  initieelVerantwoordelijkZorgkantoor: StringOperationFilterInput
}

"""
Generic Input Types
"""
input DateOperationFilterInput {
  eq: Date
  # neq: Date
  # in: [Date]
  # nin: [Date]
  # gt: Date
  ngt: Date
  gte: Date
  # ngte: Date
  # lt: Date
  # nlt: Date
  # lte: Date
  # nlte: Date
}

input StringOperationFilterInput {
  # and: [StringOperationFilterInput!]
  # or: [StringOperationFilterInput!]
  eq: String
  # neq: String
  # contains: String
  # ncontains: String
  # in: [String]
  # nin: [String]
  # startsWith: String
  # nstartsWith: String
  # endsWith: String
  # nendsWith: String
}

input UuidOperationFilterInput {
  eq: UUID
  # neq: UUID
  # in: [UUID]
  # nin: [UUID]
  # gt: UUID
  # ngt: UUID
  # gte: UUID
  # ngte: UUID
  # lt: UUID
  # nlt: UUID
  # lte: UUID
  # nlte: UUID
}
